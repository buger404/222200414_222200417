// Code generated by hertz generator.

package task

import (
	"context"

	task "backend/biz/model/task"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// AllMedals .
// @router api/medals/all [POST]
func AllMedals(ctx context.Context, c *app.RequestContext) {
	var err error
	var req task.AllMedalsReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(task.AllMedalsReq)

	c.JSON(consts.StatusOK, resp)
}

// DailyEvent .
// @router api/event/daily [GET]
func DailyEvent(ctx context.Context, c *app.RequestContext) {
	var err error
	var req task.DailyEventReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(task.DailyEventResp)

	c.JSON(consts.StatusOK, resp)
}

// EventTypeList .
// @router api/event/typelist [POST]
func EventTypeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req task.EventTypeListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(task.EventTypeListResp)

	c.JSON(consts.StatusOK, resp)
}

// EventTable .
// @router api/event/table [GET]
func EventTable(ctx context.Context, c *app.RequestContext) {
	var err error
	var req task.EventTableReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(task.EventTableResp)

	c.JSON(consts.StatusOK, resp)
}

// EventList .
// @router api/event/list [DELETE]
func EventList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req task.EventListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(task.EventListResp)

	c.JSON(consts.StatusOK, resp)
}
